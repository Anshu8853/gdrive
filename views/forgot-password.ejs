<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Forgot Password - GDrive</title>
    <style>
        * { box-sizing: border-box; margin: 0; padding: 0; }
        body { 
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; 
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }
        .container { 
            max-width: 450px; 
            width: 100%;
            background: white; 
            padding: 40px; 
            border-radius: 20px; 
            box-shadow: 0 20px 60px rgba(0,0,0,0.15);
            position: relative;
            overflow: hidden;
        }
        .container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 5px;
            background: linear-gradient(90deg, #667eea, #764ba2);
        }
        h1 { 
            text-align: center; 
            color: #2c3e50; 
            margin-bottom: 10px;
            font-size: 28px;
            font-weight: 700;
        }
        .form-group { margin-bottom: 20px; }
        label { 
            display: block; 
            margin-bottom: 8px; 
            color: #555; 
            font-weight: 600;
            font-size: 14px;
        }
        input { 
            width: 100%; 
            padding: 15px 20px; 
            border: 2px solid #e1e8ed; 
            border-radius: 12px; 
            font-size: 16px;
            transition: all 0.3s ease;
            background: #f8f9fa;
        }
        input:focus {
            outline: none;
            border-color: #667eea;
            background: white;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }
        button { 
            width: 100%; 
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white; 
            padding: 16px; 
            border: none; 
            border-radius: 12px; 
            cursor: pointer; 
            font-size: 16px;
            font-weight: 600;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
        }
        button:hover { 
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
        }
        button:active { transform: translateY(0); }
        .error { 
            background: linear-gradient(135deg, #ff6b6b 0%, #ee5a52 100%);
            color: white; 
            padding: 15px 20px; 
            margin-bottom: 20px; 
            border-radius: 12px;
            font-weight: 500;
            box-shadow: 0 5px 15px rgba(255, 107, 107, 0.3);
        }
        .success { 
            background: linear-gradient(135deg, #51cf66 0%, #40c057 100%);
            color: white; 
            padding: 15px 20px; 
            margin-bottom: 20px; 
            border-radius: 12px;
            font-weight: 500;
            box-shadow: 0 5px 15px rgba(81, 207, 102, 0.3);
        }
        .links { 
            text-align: center; 
            margin-top: 25px; 
            padding-top: 20px;
            border-top: 1px solid #e9ecef;
        }
        .links a { 
            color: #667eea; 
            text-decoration: none; 
            font-weight: 600;
            transition: color 0.3s ease;
            margin: 0 10px;
        }
        .links a:hover { color: #764ba2; }
        .description { 
            text-align: center; 
            color: #6c757d; 
            margin-bottom: 30px; 
            font-size: 16px;
            line-height: 1.5;
        }
        .icon { 
            text-align: center; 
            font-size: 60px; 
            margin-bottom: 20px;
            filter: drop-shadow(0 4px 8px rgba(0,0,0,0.1));
        }
        .otp-code { 
            background: linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%);
            color: #2e7d32; 
            padding: 20px; 
            border-radius: 12px; 
            margin: 15px 0;
            text-align: center;
            font-size: 28px;
            font-weight: bold;
            letter-spacing: 8px;
            font-family: 'Courier New', monospace;
            border: 2px solid #4caf50;
        }
        .otp-input { 
            text-align: center; 
            font-size: 24px; 
            letter-spacing: 8px; 
            font-family: 'Courier New', monospace;
            font-weight: bold;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border: 3px solid #e1e8ed;
        }
        .otp-input:focus {
            border-color: #667eea;
            background: white;
            letter-spacing: 8px;
        }
        .password-requirements {
            font-size: 12px;
            color: #6c757d;
            margin-top: 5px;
            font-style: italic;
        }
        .form-section {
            margin-bottom: 25px;
        }
        .step-indicator {
            text-align: center;
            color: #667eea;
            font-weight: bold;
            margin-bottom: 15px;
            padding: 10px 20px;
            background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
            border-radius: 10px;
            border: 1px solid #2196f3;
            font-size: 14px;
        }
        .otp-info {
            background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
            padding: 15px 20px;
            border-radius: 12px;
            margin-bottom: 20px;
            color: #1565c0;
            text-align: center;
            font-weight: 500;
            border: 1px solid #2196f3;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="icon">🔑</div>
        
        <% if (typeof showOtpForm !== 'undefined' && showOtpForm) { %>
            <h1>🔐 Verify & Reset</h1>
            <div class="step-indicator">Step 2: Verify OTP & Set New Password</div>
            <p class="description">Enter the 6-digit verification code sent to your email and create a new secure password.</p>
        <% } else { %>
            <h1>🔓 Reset Password</h1>
            <div class="step-indicator">Step 1: Request Password Reset</div>
            <p class="description">No worries! Enter your email address and we'll send you a secure verification code to reset your password.</p>
        <% } %>
        
        <% if (typeof error !== 'undefined' && error) { %>
        <div class="error">
            <strong>⚠️ Error:</strong> <%= error %>
        </div>
        <% } %>
        
        <% if (typeof success !== 'undefined' && success) { %>
        <div class="success">
            <strong>✅ Success:</strong> <%= success %>
            
            <% if (typeof otpCode !== 'undefined' && otpCode) { %>
            <div class="otp-code">
                <%= otpCode %>
            </div>
            <div class="otp-info">
                ⚠️ Email service not configured - use this OTP code above
            </div>
            <% } %>
        </div>
        <% } %>
        
        <% if (typeof showOtpForm !== 'undefined' && showOtpForm) { %>
        <!-- OTP Verification Form -->
        <form action="/user/verify-otp" method="POST">
            <input type="hidden" name="email" value="<%= userEmail %>">
            
            <div class="form-section">
                <div class="form-group">
                    <label for="otp">🔐 6-Digit Verification Code</label>
                    <input type="text" id="otp" name="otp" class="otp-input" placeholder="000000" 
                           maxlength="6" pattern="[0-9]{6}" required>
                    <div class="password-requirements">📧 Check your email for the verification code</div>
                </div>
            </div>
            
            <div class="form-section">
                <div class="form-group">
                    <label for="newPassword">🔒 New Password</label>
                    <input type="password" id="newPassword" name="newPassword" 
                           placeholder="Create a strong password" minlength="6" required>
                    <div class="password-requirements">🛡️ Minimum 6 characters for security</div>
                </div>
                
                <div class="form-group">
                    <label for="confirmPassword">🔐 Confirm New Password</label>
                    <input type="password" id="confirmPassword" name="confirmPassword" 
                           placeholder="Confirm your password" minlength="6" required>
                    <div class="password-requirements">✅ Must match the password above</div>
                </div>
            </div>
            
            <button type="submit">🚀 Reset Password</button>
        </form>
        
        <div class="links">
            <a href="/user/forgot-password">🔄 Request New OTP</a>
            <a href="/user/login">🏠 Back to Login</a>
        </div>
        
        <% } else { %>
        <!-- Email Request Form -->
        <form action="/user/forgot-password" method="POST">
            <div class="form-group">
                <label for="email">📧 Email Address</label>
                <input type="email" id="email" name="email" placeholder="Enter your registered email" 
                       value="<%= typeof userEmail !== 'undefined' ? userEmail : '' %>" required>
            </div>
            
            <button type="submit">📨 Send Verification Code</button>
        </form>
        
        <div class="links">
            <a href="/user/login">🏠 Back to Login</a>
            <a href="/user/register">✨ Create New Account</a>
        </div>
        <% } %>
    </div>

    <script>
        // Enhanced OTP input with visual feedback
        document.addEventListener('DOMContentLoaded', function() {
            const otpInput = document.getElementById('otp');
            if (otpInput) {
                otpInput.addEventListener('input', function(e) {
                    // Only allow numbers
                    this.value = this.value.replace(/[^0-9]/g, '');
                    
                    // Visual feedback based on completion
                    if (this.value.length === 6) {
                        this.style.background = 'linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%)';
                        this.style.borderColor = '#4caf50';
                        this.style.boxShadow = '0 0 0 3px rgba(76, 175, 80, 0.2)';
                    } else if (this.value.length > 0) {
                        this.style.background = 'linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%)';
                        this.style.borderColor = '#ffc107';
                        this.style.boxShadow = '0 0 0 3px rgba(255, 193, 7, 0.2)';
                    } else {
                        this.style.background = 'linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%)';
                        this.style.borderColor = '#e1e8ed';
                        this.style.boxShadow = '';
                    }
                });

                // Paste support for OTP
                otpInput.addEventListener('paste', function(e) {
                    e.preventDefault();
                    const pastedData = e.clipboardData.getData('text').replace(/[^0-9]/g, '').slice(0, 6);
                    this.value = pastedData;
                    this.dispatchEvent(new Event('input'));
                });
            }

            // Enhanced password confirmation validation
            const newPassword = document.getElementById('newPassword');
            const confirmPassword = document.getElementById('confirmPassword');
            
            if (newPassword && confirmPassword) {
                function validatePassword(input) {
                    const value = input.value;
                    const strength = getPasswordStrength(value);
                    
                    switch(strength) {
                        case 'weak':
                            input.style.borderColor = '#ff6b6b';
                            input.style.background = 'linear-gradient(135deg, #ffebee 0%, #ffcdd2 100%)';
                            break;
                        case 'medium':
                            input.style.borderColor = '#ffc107';
                            input.style.background = 'linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%)';
                            break;
                        case 'strong':
                            input.style.borderColor = '#4caf50';
                            input.style.background = 'linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%)';
                            break;
                        default:
                            input.style.borderColor = '#e1e8ed';
                            input.style.background = '#f8f9fa';
                    }
                }

                function validatePasswords() {
                    if (confirmPassword.value && newPassword.value !== confirmPassword.value) {
                        confirmPassword.setCustomValidity('Passwords do not match');
                        confirmPassword.style.borderColor = '#ff6b6b';
                        confirmPassword.style.background = 'linear-gradient(135deg, #ffebee 0%, #ffcdd2 100%)';
                    } else {
                        confirmPassword.setCustomValidity('');
                        if (confirmPassword.value.length > 0) {
                            confirmPassword.style.borderColor = '#4caf50';
                            confirmPassword.style.background = 'linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%)';
                        }
                    }
                }

                newPassword.addEventListener('input', function() {
                    validatePassword(this);
                    validatePasswords();
                });
                confirmPassword.addEventListener('input', validatePasswords);
            }

            // Email input validation
            const emailInput = document.getElementById('email');
            if (emailInput) {
                emailInput.addEventListener('input', function() {
                    const isValid = /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(this.value);
                    if (this.value.length > 0) {
                        if (isValid) {
                            this.style.borderColor = '#4caf50';
                            this.style.background = 'linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%)';
                        } else {
                            this.style.borderColor = '#ffc107';
                            this.style.background = 'linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%)';
                        }
                    } else {
                        this.style.borderColor = '#e1e8ed';
                        this.style.background = '#f8f9fa';
                    }
                });
            }
        });

        function getPasswordStrength(password) {
            if (password.length < 6) return 'weak';
            
            let score = 0;
            if (password.length >= 8) score++;
            if (/[a-z]/.test(password)) score++;
            if (/[A-Z]/.test(password)) score++;
            if (/[0-9]/.test(password)) score++;
            if (/[^a-zA-Z0-9]/.test(password)) score++;
            
            if (score < 3) return 'weak';
            if (score < 5) return 'medium';
            return 'strong';
        }

        // Enhanced form submission
        const forms = document.querySelectorAll('form');
        forms.forEach(form => {
            form.addEventListener('submit', function(e) {
                const submitBtn = this.querySelector('button[type="submit"]');
                const originalText = submitBtn.textContent;
                
                submitBtn.disabled = true;
                submitBtn.textContent = '⏳ Processing...';
                submitBtn.style.opacity = '0.7';
                
                // Re-enable after 3 seconds in case of network issues
                setTimeout(() => {
                    submitBtn.disabled = false;
                    submitBtn.textContent = originalText;
                    submitBtn.style.opacity = '1';
                }, 3000);
            });
        });

        // Add loading animation on page load
        document.addEventListener('DOMContentLoaded', function() {
            const container = document.querySelector('.container');
            container.style.opacity = '0';
            container.style.transform = 'translateY(20px)';
            
            setTimeout(() => {
                container.style.transition = 'all 0.6s ease';
                container.style.opacity = '1';
                container.style.transform = 'translateY(0)';
            }, 100);
        });
    </script>
</body>
</html>