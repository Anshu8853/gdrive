<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="format-detection" content="telephone=no">
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <title>Register - GDrive</title>
<html>
<head>
    <meta charset="UTF-8">
    <title>Sign Up - GDrive</title>
    <style>
        * { box-sizing: border-box; margin: 0; padding: 0; }
        body { 
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; 
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }
        .container { 
            max-width: 450px; 
            width: 100%;
            background: white; 
            padding: 40px; 
            border-radius: 20px; 
            box-shadow: 0 20px 60px rgba(0,0,0,0.15);
            position: relative;
            overflow: hidden;
        }
        .container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 5px;
            background: linear-gradient(90deg, #667eea, #764ba2);
        }
        h1 { 
            text-align: center; 
            color: #2c3e50; 
            margin-bottom: 10px;
            font-size: 28px;
            font-weight: 700;
        }
        .form-group { margin-bottom: 20px; }
        label { 
            display: block; 
            margin-bottom: 8px; 
            color: #555; 
            font-weight: 600;
            font-size: 14px;
        }
        input { 
            width: 100%; 
            padding: 15px 20px; 
            border: 2px solid #e1e8ed; 
            border-radius: 12px; 
            font-size: 16px;
            transition: all 0.3s ease;
            background: #f8f9fa;
        }
        input:focus {
            outline: none;
            border-color: #667eea;
            background: white;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }
        button { 
            width: 100%; 
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white; 
            padding: 16px; 
            border: none; 
            border-radius: 12px; 
            cursor: pointer; 
            font-size: 16px;
            font-weight: 600;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
        }
        button:hover { 
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
        }
        button:active { transform: translateY(0); }
        .btn-secondary { 
            background: linear-gradient(135deg, #95a5a6 0%, #7f8c8d 100%);
        }
        .btn-secondary:hover { 
            box-shadow: 0 10px 25px rgba(149, 165, 166, 0.3);
        }
        .error { 
            background: linear-gradient(135deg, #ff6b6b 0%, #ee5a52 100%);
            color: white; 
            padding: 15px 20px; 
            margin-bottom: 20px; 
            border-radius: 12px;
            font-weight: 500;
            box-shadow: 0 5px 15px rgba(255, 107, 107, 0.3);
        }
        .success { 
            background: linear-gradient(135deg, #51cf66 0%, #40c057 100%);
            color: white; 
            padding: 15px 20px; 
            margin-bottom: 20px; 
            border-radius: 12px;
            font-weight: 500;
            box-shadow: 0 5px 15px rgba(81, 207, 102, 0.3);
        }
        .links { 
            text-align: center; 
            margin-top: 25px; 
            padding-top: 20px;
            border-top: 1px solid #e9ecef;
        }
        .links a { 
            color: #667eea; 
            text-decoration: none; 
            font-weight: 600;
            transition: color 0.3s ease;
        }
        .links a:hover { color: #764ba2; }
        .description { 
            text-align: center; 
            color: #6c757d; 
            margin-bottom: 30px; 
            font-size: 16px;
            line-height: 1.5;
        }
        .icon { 
            text-align: center; 
            font-size: 60px; 
            margin-bottom: 20px;
            filter: drop-shadow(0 4px 8px rgba(0,0,0,0.1));
        }
        .step-indicator { 
            text-align: center; 
            margin-bottom: 30px;
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 15px;
        }
        .step { 
            width: 40px; 
            height: 40px; 
            border-radius: 50%; 
            background: #e9ecef; 
            color: #6c757d; 
            line-height: 40px; 
            font-weight: bold;
            font-size: 16px;
            transition: all 0.3s ease;
        }
        .step.active { 
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            transform: scale(1.1);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }
        .step.completed { 
            background: linear-gradient(135deg, #51cf66 0%, #40c057 100%);
            color: white;
        }
        .step-line {
            width: 40px;
            height: 3px;
            background: #e9ecef;
            border-radius: 2px;
        }
        .step-line.completed {
            background: linear-gradient(90deg, #51cf66, #40c057);
        }
        .otp-info { 
            background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
            padding: 20px; 
            border-radius: 15px; 
            margin-bottom: 25px; 
            font-size: 15px;
            text-align: center;
            border: 1px solid #2196f3;
            color: #1565c0;
            font-weight: 500;
        }
        .otp-input { 
            text-align: center; 
            font-size: 24px; 
            letter-spacing: 8px; 
            font-family: 'Courier New', monospace;
            font-weight: bold;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border: 3px solid #e1e8ed;
        }
        .otp-input:focus {
            border-color: #667eea;
            background: white;
            letter-spacing: 8px;
        }
        .email-display { 
            background: linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%);
            padding: 15px 20px; 
            border-radius: 12px; 
            margin-bottom: 20px; 
            font-weight: 600; 
            text-align: center;
            color: #2e7d32;
            border: 2px solid #4caf50;
            font-size: 16px;
        }
        
        /* Popup Modal Styles */
        .popup-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 1000;
        }
        .popup-modal {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            max-width: 400px;
            width: 90%;
            text-align: center;
            z-index: 1001;
        }
        .popup-icon {
            font-size: 64px;
            margin-bottom: 20px;
        }
        .popup-title {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 15px;
            color: #dc3545;
        }
        .popup-message {
            font-size: 16px;
            color: #666;
            margin-bottom: 25px;
            line-height: 1.5;
        }
        .popup-buttons {
            display: flex;
            gap: 10px;
            justify-content: center;
        }
        .popup-btn {
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            text-decoration: none;
            display: inline-block;
        }
        .popup-btn-primary {
            background: #007bff;
            color: white;
        }
        .popup-btn-primary:hover {
            background: #0056b3;
        }
        .popup-btn-secondary {
            background: #6c757d;
            color: white;
        }
        .popup-btn-secondary:hover {
            background: #545b62;
        }
        .popup-show {
            display: block !important;
        }
        
        /* Animation */
        @keyframes fadeInScale {
            from {
                opacity: 0;
                transform: translate(-50%, -50%) scale(0.7);
            }
            to {
                opacity: 1;
                transform: translate(-50%, -50%) scale(1);
            }
        }
        .popup-modal {
            animation: fadeInScale 0.3s ease-out;
        }
        
        /* Password Requirements Styles */
        .password-requirements {
            margin-top: 10px;
            padding: 15px;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: 10px;
            border: 1px solid #dee2e6;
            font-size: 13px;
        }
        .requirements-title {
            font-weight: 600;
            color: #495057;
            margin-bottom: 8px;
            font-size: 14px;
        }
        .requirement {
            margin-bottom: 4px;
            color: #6c757d;
            transition: color 0.3s ease;
            padding: 2px 0;
        }
        .requirement.valid {
            color: #28a745;
            font-weight: 500;
        }
        .requirement.valid::before {
            content: '✓ ';
            color: #28a745;
            font-weight: bold;
        }
        .requirement.invalid {
            color: #dc3545;
        }
        .requirement.invalid::before {
            content: '✗ ';
            color: #dc3545;
            font-weight: bold;
        }
        .password-strength {
            margin-top: 10px;
        }
        .strength-bar {
            height: 6px;
            background: #e9ecef;
            border-radius: 3px;
            overflow: hidden;
            margin-bottom: 5px;
        }
        .strength-fill {
            height: 100%;
            transition: all 0.3s ease;
            border-radius: 3px;
        }
        .strength-fill.weak {
            width: 25%;
            background: linear-gradient(90deg, #dc3545, #e74c3c);
        }
        .strength-fill.fair {
            width: 50%;
            background: linear-gradient(90deg, #ffc107, #ff9800);
        }
        .strength-fill.good {
            width: 75%;
            background: linear-gradient(90deg, #17a2b8, #007bff);
        }
        .strength-fill.strong {
            width: 100%;
            background: linear-gradient(90deg, #28a745, #20c997);
        }
        .strength-text {
            font-size: 12px;
            font-weight: 600;
            text-align: center;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        .strength-text.weak { color: #dc3545; }
        .strength-text.fair { color: #ffc107; }
        .strength-text.good { color: #17a2b8; }
        .strength-text.strong { color: #28a745; }
    </style>
</head>
<body>
    <div class="container">
        <div class="icon">📧</div>
        
        <% if (typeof step !== 'undefined' && step === 2) { %>
            <!-- Step 2: OTP Verification -->
            <div class="step-indicator">
                <span class="step completed">1</span>
                <div class="step-line completed"></div>
                <span class="step active">2</span>
            </div>
            
            <h1>✨ Verify Your Email</h1>
            <p class="description">We've sent a 6-digit verification code to your email address. Please enter it below to complete your registration.</p>
            
            <% if (typeof email !== 'undefined' && email) { %>
                <div class="email-display">📧 <%= email %></div>
            <% } %>
            
            <% if (typeof error !== 'undefined' && error) { %>
            <div class="error">
                <strong>⚠️ Error:</strong> <%= error %>
            </div>
            <% } %>
            
            <% if (typeof success !== 'undefined' && success) { %>
            <div class="success">
                <strong>✅ Success:</strong> <%= success %>
            </div>
            <% } %>
            
            <div class="otp-info">
                � Your verification code will expire in 15 minutes<br>
                📱 Check your email inbox and spam folder
            </div>
            
            <form action="/user/register" method="POST">
                <input type="hidden" name="email" value="<%= typeof email !== 'undefined' ? email : '' %>">
                
                <div class="form-group">
                    <label for="otp">🔐 Verification Code</label>
                    <input type="text" id="otp" name="otp" class="otp-input" placeholder="000000" maxlength="6" required>
                </div>
                
                <div class="form-group">
                    <label for="username">👤 Username</label>
                    <input type="text" id="username" name="username" placeholder="Choose a unique username" required>
                </div>
                
                <div class="form-group">
                    <label for="password">🔒 Password</label>
                    <input type="password" id="password" name="password" placeholder="Create a strong password" required 
                           minlength="8" maxlength="16">
                    <div class="password-requirements">
                        <div class="requirements-title">Password Requirements:</div>
                        <div class="requirement" id="req-length">• 8-16 characters</div>
                        <div class="requirement" id="req-uppercase">• At least one uppercase letter (A-Z)</div>
                        <div class="requirement" id="req-lowercase">• At least one lowercase letter (a-z)</div>
                        <div class="requirement" id="req-number">• At least one number (0-9)</div>
                        <div class="requirement" id="req-special">• At least one special character (@$!%*?&)</div>
                    </div>
                    <div class="password-strength" id="password-strength" style="display: none;">
                        <div class="strength-bar">
                            <div class="strength-fill" id="strength-fill"></div>
                        </div>
                        <div class="strength-text" id="strength-text"></div>
                    </div>
                </div>
                
                <button type="submit">🚀 Complete Registration</button>
            </form>
            
            <div class="links">
                <a href="/user/register">← Start Over</a> | 
                <a href="/user/login">Already have an account? Login</a>
            </div>
            
        <% } else { %>
            <!-- Step 1: Email Verification -->
            <div class="step-indicator">
                <span class="step active">1</span>
                <div class="step-line"></div>
                <span class="step">2</span>
            </div>
            
            <h1>🎉 Create Account</h1>
            <p class="description">Welcome! Let's get started by verifying your email address. We'll send you a secure verification code.</p>
            
            <% if (typeof error !== 'undefined' && error) { %>
            <div class="error">
                <strong>⚠️ Error:</strong> <%= error %>
            </div>
            <% } %>
            
            <% if (typeof success !== 'undefined' && success) { %>
            <div class="success">
                <strong>✅ Success:</strong> <%= success %>
            </div>
            <% } %>
            
            <form action="/user/register/send-otp" method="POST" id="emailForm">
                <div class="form-group">
                    <label for="email">📧 Email Address</label>
                    <input type="email" id="email" name="email" placeholder="Enter your email address" required>
                </div>
                
                <button type="submit">📨 Send Verification Code</button>
            </form>
            
            <div class="links">
                <a href="/user/login">Already have an account? Login</a>
            </div>
        <% } %>
    </div>

    <!-- Popup Modal for Already Registered Email -->
    <div class="popup-overlay" id="popupOverlay">
        <div class="popup-modal">
            <div class="popup-icon">⚠️</div>
            <div class="popup-title">Email Already Registered</div>
            <div class="popup-message">
                This email address is already associated with an account. 
                Would you like to login instead or try with a different email?
            </div>
            <div class="popup-buttons">
                <a href="/user/login" class="popup-btn popup-btn-primary">Go to Login</a>
                <button class="popup-btn popup-btn-secondary" onclick="closePopup()">Try Different Email</button>
            </div>
        </div>
    </div>

    <script>
        // Auto-format OTP input with enhanced features
        const otpInput = document.getElementById('otp');
        if (otpInput) {
            otpInput.addEventListener('input', function(e) {
                this.value = this.value.replace(/[^0-9]/g, '');
                
                // Visual feedback based on completion
                if (this.value.length === 6) {
                    this.style.background = 'linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%)';
                    this.style.borderColor = '#4caf50';
                    this.style.boxShadow = '0 0 0 3px rgba(76, 175, 80, 0.2)';
                    
                    // Auto-focus next field
                    const usernameInput = document.getElementById('username');
                    if (usernameInput) {
                        setTimeout(() => usernameInput.focus(), 100);
                    }
                } else if (this.value.length > 0) {
                    this.style.background = 'linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%)';
                    this.style.borderColor = '#ffc107';
                    this.style.boxShadow = '0 0 0 3px rgba(255, 193, 7, 0.2)';
                } else {
                    this.style.background = '';
                    this.style.borderColor = '#e1e8ed';
                    this.style.boxShadow = '';
                }
            });

            // Paste support for OTP
            otpInput.addEventListener('paste', function(e) {
                e.preventDefault();
                const pastedData = e.clipboardData.getData('text').replace(/[^0-9]/g, '').slice(0, 6);
                this.value = pastedData;
                this.dispatchEvent(new Event('input'));
            });
        }

        // Enhanced form validation
        const forms = document.querySelectorAll('form');
        forms.forEach(form => {
            form.addEventListener('submit', function(e) {
                const submitBtn = this.querySelector('button[type="submit"]');
                const originalText = submitBtn.textContent;
                
                submitBtn.disabled = true;
                submitBtn.textContent = '⏳ Processing...';
                submitBtn.style.opacity = '0.7';
                
                // Re-enable after 3 seconds in case of network issues
                setTimeout(() => {
                    submitBtn.disabled = false;
                    submitBtn.textContent = originalText;
                    submitBtn.style.opacity = '1';
                }, 3000);
            });
        });

        // Enhanced username validation
        const usernameInput = document.getElementById('username');
        if (usernameInput) {
            usernameInput.addEventListener('input', function(e) {
                const value = this.value.toLowerCase();
                const isValid = /^[a-zA-Z0-9_]{3,20}$/.test(value);
                
                if (value.length > 0) {
                    if (isValid) {
                        this.style.borderColor = '#4caf50';
                        this.style.background = 'linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%)';
                    } else {
                        this.style.borderColor = '#ff6b6b';
                        this.style.background = 'linear-gradient(135deg, #ffebee 0%, #ffcdd2 100%)';
                    }
                } else {
                    this.style.borderColor = '#e1e8ed';
                    this.style.background = '';
                }
            });
        }

        // Enhanced password validation
        const passwordInput = document.getElementById('password');
        if (passwordInput) {
            passwordInput.addEventListener('input', function(e) {
                const value = this.value;
                const strength = getPasswordStrength(value);
                
                switch(strength) {
                    case 'weak':
                        this.style.borderColor = '#ff6b6b';
                        this.style.background = 'linear-gradient(135deg, #ffebee 0%, #ffcdd2 100%)';
                        break;
                    case 'medium':
                        this.style.borderColor = '#ffc107';
                        this.style.background = 'linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%)';
                        break;
                    case 'strong':
                        this.style.borderColor = '#4caf50';
                        this.style.background = 'linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%)';
                        break;
                    default:
                        this.style.borderColor = '#e1e8ed';
                        this.style.background = '';
                }
            });
        }

        function getPasswordStrength(password) {
            if (password.length < 6) return 'weak';
            
            let score = 0;
            if (password.length >= 8) score++;
            if (/[a-z]/.test(password)) score++;
            if (/[A-Z]/.test(password)) score++;
            if (/[0-9]/.test(password)) score++;
            if (/[^a-zA-Z0-9]/.test(password)) score++;
            
            if (score < 3) return 'weak';
            if (score < 5) return 'medium';
            return 'strong';
        }

        // Show popup if there's an error about email already being registered
        <% if (typeof showEmailExistsPopup !== 'undefined' && showEmailExistsPopup) { %>
            showPopup();
        <% } %>

        function showPopup() {
            document.getElementById('popupOverlay').classList.add('popup-show');
        }

        function closePopup() {
            document.getElementById('popupOverlay').classList.remove('popup-show');
            // Clear the email input
            const emailInput = document.getElementById('email');
            if (emailInput) {
                emailInput.value = '';
                emailInput.focus();
            }
        }

        // Close popup when clicking outside
        document.getElementById('popupOverlay').addEventListener('click', function(e) {
            if (e.target === this) {
                closePopup();
            }
        });

        // Close popup with Escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closePopup();
            }
        });

        // Add loading animation on page transitions
        document.addEventListener('DOMContentLoaded', function() {
            const container = document.querySelector('.container');
            container.style.opacity = '0';
            container.style.transform = 'translateY(20px)';
            
            setTimeout(() => {
                container.style.transition = 'all 0.6s ease';
                container.style.opacity = '1';
                container.style.transform = 'translateY(0)';
            }, 100);
        });

        // Password validation and strength meter
        function validatePassword() {
            const password = document.getElementById('password').value;
            const requirements = {
                length: password.length >= 8 && password.length <= 16,
                special: /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(password),
                uppercase: /[A-Z]/.test(password),
                lowercase: /[a-z]/.test(password),
                number: /[0-9]/.test(password)
            };

            // Update requirement checkmarks
            updateRequirement('req-length', requirements.length);
            updateRequirement('req-special', requirements.special);
            updateRequirement('req-uppercase', requirements.uppercase);
            updateRequirement('req-lowercase', requirements.lowercase);
            updateRequirement('req-number', requirements.number);

            // Calculate strength
            const score = Object.values(requirements).filter(Boolean).length;
            updateStrengthMeter(score);

            return requirements.length && requirements.special;
        }

        function updateRequirement(id, isValid) {
            const element = document.getElementById(id);
            if (element) {
                element.className = 'requirement ' + (isValid ? 'valid' : 'invalid');
            }
        }

        function updateStrengthMeter(score) {
            const strengthFill = document.querySelector('.strength-fill');
            const strengthText = document.querySelector('.strength-text');
            
            if (!strengthFill || !strengthText) return;

            strengthFill.className = 'strength-fill';
            strengthText.className = 'strength-text';

            if (score <= 1) {
                strengthFill.classList.add('weak');
                strengthText.classList.add('weak');
                strengthText.textContent = 'Weak';
            } else if (score <= 2) {
                strengthFill.classList.add('fair');
                strengthText.classList.add('fair');
                strengthText.textContent = 'Fair';
            } else if (score <= 4) {
                strengthFill.classList.add('good');
                strengthText.classList.add('good');
                strengthText.textContent = 'Good';
            } else {
                strengthFill.classList.add('strong');
                strengthText.classList.add('strong');
                strengthText.textContent = 'Strong';
            }
        }

        // Attach password validation to input event
        document.addEventListener('DOMContentLoaded', function() {
            const passwordInput = document.getElementById('password');
            if (passwordInput) {
                passwordInput.addEventListener('input', validatePassword);
            }
        });
    </script>
</body>
</html>